name: ci

on: [push, pull_request]

jobs:
  lint:
    name: Rustfmt and clippy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Run clippy
        run: cargo clippy --all-features -- -D warnings

      - name: Run rustfmt
        run: cargo fmt --all -- --check

  build_and_test:
    name: Build and test

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Fetch
        run: cargo fetch

      - name: Test
        run: cargo test --all-features

      - name: Build
        run: cargo build --release

      - name: Upload artifact
        if: runner.os == 'Linux' || runner.os == 'macOS'
        uses: actions/upload-artifact@v3
        with:
          name: ${{ runner.os }}
          path: target/release/hpk

      - name: Upload artifact (Win)
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@v3
        with:
          name: ${{ runner.os }}
          path: target/release/hpk.exe

  minrust:
    name: MSRV
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get MSRV from package metadata
        id: msrv
        run: |
          cargo metadata --no-deps --format-version 1 |
              jq -r '"version=" + (.packages[] | select(.name == "hpk")).rust_version' >> $GITHUB_OUTPUT

      - name: Install rust (${{ steps.msrv.outputs.version }})
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ steps.msrv.outputs.version }}

      - name: Check
        run: cargo check --verbose

  nightly:
    name: Check nightly
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install rust (nightly)
        uses: dtolnay/rust-toolchain@nightly

      - name: Check hpk
        run: cargo check
